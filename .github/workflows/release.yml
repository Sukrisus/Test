name: Build Release APKs

on:
  release:
    types: [created]
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Install required SDK components
      run: |
        echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-34"
        echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-35"
        echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "build-tools;34.0.0"
        echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "build-tools;35.0.0"
        echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "ndk;27.1.12297006"
        echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools"
        
    - name: Build debug APK
      run: ./gradlew assembleDebug
      
    - name: Build release APK
      run: ./gradlew assembleRelease
      
    - name: Rename APKs
      run: |
        cp app/build/outputs/apk/debug/app-debug.apk ./app-debug.apk
        cp app/build/outputs/apk/release/app-release-unsigned.apk ./app-release.apk
        
    - name: Get version name
      id: version
      run: |
        VERSION_NAME=$(grep "versionName" app/build.gradle | cut -d'"' -f2)
        echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
        
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-v${{ steps.version.outputs.version_name }}
        path: app-debug.apk
        
    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release-v${{ steps.version.outputs.version_name }}
        path: app-release.apk
        
    - name: Upload to GitHub Release
      if: github.event_name == 'release' || startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          app-debug.apk
          app-release.apk
        name: Release ${{ steps.version.outputs.version_name }}
        body: |
          ## MBLoader v${{ steps.version.outputs.version_name }}
          
          ### Downloads
          - **app-debug.apk**: Debug version with debugging symbols
          - **app-release.apk**: Release version (unsigned)
          
          ### Installation
          1. Download the APK file
          2. Enable "Install from unknown sources" in Android settings
          3. Install the APK
          
          ### Changes
          See commit history for detailed changes.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}